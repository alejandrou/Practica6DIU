/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.practica6;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;


public class Practica6 extends javax.swing.JFrame {

    /**
     * Creates new form Practica6
     */
    private JFileChooser jf =  new JFileChooser();
    private File fichero;
    private final String title;
    private boolean remindSave;
    
    public Practica6() {
        title="Edición Imágenes (Práctica 6)";
        remindSave=false;
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        initComponents();
        this.setTitle(title);
        
        this.save.setEnabled(false);
        this.saveAs.setEnabled(false);
        this.threshold.setEnabled(false);
        this.original.setEnabled(false);
        this.close.setEnabled(false);
    }

    private void openImage(){
        jf.addChoosableFileFilter(new FileNameExtensionFilter("Texto", "txt"));
        jf.addChoosableFileFilter(new FileNameExtensionFilter("Fotos", "jpg", "jpeg", "png"));
        
        int res = jf.showOpenDialog(null);
        
        if(res==JFileChooser.APPROVE_OPTION){
            fichero = jf.getSelectedFile();
            lienzo1.openImage(fichero.getAbsolutePath());
            remindSave=false;
            this.setTitle(fichero.getName()+" - "+title);
            this.saveAs.setEnabled(true);
            this.threshold.setEnabled(true);
            this.close.setEnabled(true);
        }
    }
    
    private void closeImage(){
        fichero=null;
        lienzo1.closeImage();
        this.setTitle(title);

        this.save.setEnabled(false);
        this.saveAs.setEnabled(false);
        this.threshold.setEnabled(false);
        this.original.setEnabled(false);
        this.close.setEnabled(false);
    }
    
    private void exitAplication(){
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Quieres cerrar la aplicación?."
                ,"Cerrar Aplicación", JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            System.exit(0);
            setDefaultCloseOperation(javax.swing.JFrame.EXIT_ON_CLOSE);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lienzo1 = new com.mycompany.practica6.Lienzo();
        jMenuBar1 = new javax.swing.JMenuBar();
        files = new javax.swing.JMenu();
        open = new javax.swing.JMenuItem();
        save = new javax.swing.JMenuItem();
        saveAs = new javax.swing.JMenuItem();
        close = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        exit = new javax.swing.JMenuItem();
        edit = new javax.swing.JMenu();
        filter = new javax.swing.JMenu();
        original = new javax.swing.JMenuItem();
        threshold = new javax.swing.JMenuItem();
        help = new javax.swing.JMenu();
        about = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout lienzo1Layout = new javax.swing.GroupLayout(lienzo1);
        lienzo1.setLayout(lienzo1Layout);
        lienzo1Layout.setHorizontalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 704, Short.MAX_VALUE)
        );
        lienzo1Layout.setVerticalGroup(
            lienzo1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );

        files.setMnemonic('f');
        files.setText("Ficheros");

        open.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        open.setText("Abrir");
        open.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openActionPerformed(evt);
            }
        });
        files.add(open);

        save.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        save.setText("Guardar");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });
        files.add(save);

        saveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        saveAs.setText("Guardar como...");
        saveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsActionPerformed(evt);
            }
        });
        files.add(saveAs);

        close.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        close.setText("Cerrar");
        close.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeActionPerformed(evt);
            }
        });
        files.add(close);
        files.add(jSeparator1);

        exit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        exit.setText("Salir");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        files.add(exit);

        jMenuBar1.add(files);

        edit.setMnemonic('e');
        edit.setText("Edición");

        filter.setText("Filtros");

        original.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        original.setText("Original");
        original.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                originalActionPerformed(evt);
            }
        });
        filter.add(original);

        threshold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        threshold.setText("Umbralizado");
        threshold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                thresholdActionPerformed(evt);
            }
        });
        filter.add(threshold);

        edit.add(filter);

        jMenuBar1.add(edit);

        help.setMnemonic('a');
        help.setText("Ayuda");

        about.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        about.setText("Acerca de");
        about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutActionPerformed(evt);
            }
        });
        help.add(about);

        jMenuBar1.add(help);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lienzo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lienzo1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void openActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openActionPerformed
        try{
            if(remindSave){
                int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se perderan los cambios no guardados, "
                        + "\n             ¿Aún desea abrir otra imágen?.", "Abrir Imágen", JOptionPane.YES_NO_OPTION);
                if(res==JOptionPane.YES_OPTION){
                    openImage();
                    remindSave=false;
                }
            }else{
                openImage();
                remindSave=false;
            }
        } catch(IllegalArgumentException e){
            closeImage();
            JOptionPane.showMessageDialog(rootPane, "ERROR: Tipo de fichero no compatible o corrupto,"
                    + "\n                 utilizar formato (jpg, jpeg o png)."
                    , "ERROR", JOptionPane.ERROR_MESSAGE);
        } catch(Exception e){
            closeImage();
            JOptionPane.showMessageDialog(rootPane, "ERROR: Al abrir el fichero."
                    , "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_openActionPerformed

    private void saveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsActionPerformed

        int res = jf.showSaveDialog(null);
        if(res==JFileChooser.APPROVE_OPTION){
            fichero = jf.getSelectedFile();
            if(fichero.exists()){
                int res2 = JOptionPane.showConfirmDialog(rootPane
                        , "AVISO: El fichero \""+fichero.getName()+"\" ya existe, ¿Quiere sobrescribirlo?."
                        ,"Sobrescribir Fichero", JOptionPane.YES_NO_OPTION);
                if(res2==JOptionPane.YES_OPTION){
                    lienzo1.saveImage(fichero.getAbsolutePath());
                    this.setTitle(fichero.getName()+" - "+title);
                    remindSave=false;
                    this.save.setEnabled(false);
                }else{
                    saveAsActionPerformed(evt);
                }
            }else{
                lienzo1.saveImage(fichero.getAbsolutePath());
                this.setTitle(fichero.getName()+" - "+title);
                remindSave=false;
                this.save.setEnabled(false);
            }
        }
    }//GEN-LAST:event_saveAsActionPerformed

    private void thresholdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_thresholdActionPerformed
        String input = JOptionPane.showInputDialog(rootPane, "Introduzca el valor de umbral.");
        if(input!=null){
            try{
                int umbral = Integer.parseInt(input);
                lienzo1.thresHoldImageFilter(fichero.getAbsolutePath(), umbral);
                remindSave=true;
                this.save.setEnabled(true);
                this.original.setEnabled(true);
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(rootPane, "ERROR: Introducir solo números"
                        , "ERROR", JOptionPane.ERROR_MESSAGE);
                thresholdActionPerformed(evt);
            }
        }      
    }//GEN-LAST:event_thresholdActionPerformed

    private void originalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_originalActionPerformed
        lienzo1.originalImageFilter();
        remindSave=true;
        this.save.setEnabled(true);
        this.original.setEnabled(false);
    }//GEN-LAST:event_originalActionPerformed

    private void closeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeActionPerformed
        if(remindSave){
            int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se perderan los cambios no guardados, "
                    + "\n             ¿Aún desea cerrar la imágen actual?.", "Cerrar Imágen", JOptionPane.YES_NO_OPTION);
            if(res==JOptionPane.YES_OPTION){
                closeImage();
                remindSave=false;
            }
        }else{
            closeImage();
            remindSave=false;
        }
    }//GEN-LAST:event_closeActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        if(remindSave){
            int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se perderan los cambios no guardados, "
                    + "\n             ¿Aún desea cerrar la aplicación?.", "Cerrar Aplicación", JOptionPane.YES_NO_OPTION);
            if(res==JOptionPane.YES_OPTION){
                exitAplication();
            }
        }else{
            exitAplication();
        }
    }//GEN-LAST:event_exitActionPerformed

    private void aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutActionPerformed
        JOptionPane.showMessageDialog(rootPane,  "Aplicación para aplicar a una imagen un umbral elegida por el usuario.\n" +
                                                 "Product Version: Edición de imágenes 1.0\n" +
                                                 "Java: 1.8.0_211; Java HotSpot(TM) 64-Bit Server VM 25.211-b12\n" +
                                                 "Runtime: Java(TM) SE Runtime Environment 1.8.0_211-b12"
                        , "AYUDA", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aboutActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        int res = JOptionPane.showConfirmDialog(rootPane, "AVISO: Se sobrescribirá la imágen original y esta acción no se puede deshacer, puede"
                                                        + "\n             usar la opción \"Guardar como...\" para no perder la imágen original."
                                                        + "\n             ¿Aún desea sobrescribir la imágen actual?.", "Guardar", JOptionPane.YES_NO_OPTION);
        if(res==JOptionPane.YES_OPTION){
            lienzo1.saveImage(fichero.getAbsolutePath());
            remindSave=false;
            this.save.setEnabled(false);
        }
    }//GEN-LAST:event_saveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Practica6.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Practica6().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem about;
    private javax.swing.JMenuItem close;
    private javax.swing.JMenu edit;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu files;
    private javax.swing.JMenu filter;
    private javax.swing.JMenu help;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private com.mycompany.practica6.Lienzo lienzo1;
    private javax.swing.JMenuItem open;
    private javax.swing.JMenuItem original;
    private javax.swing.JMenuItem save;
    private javax.swing.JMenuItem saveAs;
    private javax.swing.JMenuItem threshold;
    // End of variables declaration//GEN-END:variables
}
